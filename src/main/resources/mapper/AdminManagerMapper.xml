<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gather.we.dao.AdminManagerDAO">
	<select id="approveList" resultType="com.gather.we.dto.ManagerDTO">
		select * from
			(select * from
				(select m.managerid managerid, m.s_no s_no, s.sportname sportname, m.m_name m_name, m.email email, m.tel tel, m.address address, m.gender gender,
				m.active active, to_char(m.signupdate, 'YYYY-MM-DD') signupdate, m.m_account m_account from manager m
				join sport s on m.s_no=s.s_no and m.active=0 order by signupdate)
				<![CDATA[
		    	where rownum<=${nowPage*onePageRecord} order by signupdate asc
		    	]]>
	    		)
	    		<choose>
	    		<when test="nowPage!=totalPage">
	    	<![CDATA[
	    	where rownum<=${onePageRecord} order by signupdate desc
	    	]]>
	    	</when>
	    	<when test="nowPage==totalPage">
	    	<![CDATA[
	    	where rownum<=${lastPageRecord} order by signupdate desc
	    	]]>
	    	</when>
	    	</choose>
	</select>
	
	<select id="managerApproveTotalRecord" resultType="int">
		select count(managerid) from
			(select m.managerid managerid, m.s_no s_no, s.sportname sportname, m.m_name m_name, m.email email, m.tel tel, m.address address, m.gender gender,
			m.active active, to_char(m.signupdate, 'YYYY-MM-DD') signupdate, m.m_account m_account from manager m
			join sport s on m.s_no=s.s_no and m.active=0 order by signupdate)
	</select>
	
	<select id="approveDetail" resultType="com.gather.we.dto.ManagerDTO">
		select m.managerid managerid, m.s_no s_no, s.sportname sportname, m.m_name m_name, m.email email, m.tel tel, m.address address, m.gender gender,
		m.active active, to_char(m.signupdate, 'YYYY-MM-DD') signupdate, m.m_account m_account from manager m
		join sport s on m.s_no=s.s_no and m.active=0 and m.managerid=#{managerid}
	</select>
	
	<update id="approveOk">
		update manager set active=1 where managerid=#{managerid}
	</update>
	
	<delete id="refuseOk">
		delete from manager where managerid=#{managerid}
	</delete>
	
	<select id="managerList" resultType="com.gather.we.dto.ManagerDTO">
		select * from
			(select * from
				(select m.managerid managerid, m.s_no s_no, s.sportname sportname, m.m_name m_name, m.email email, m.tel tel, m.address address, m.gender gender,
				m.active active, to_char(m.signupdate, 'YYYY-MM-DD') signupdate, m.m_account m_account from manager m
				join sport s on m.s_no=s.s_no and m.active=1 order by m_name)
			<![CDATA[
		    	where rownum<=${nowPage*onePageRecord} order by m_name asc
		    	]]>
	    		)
	    		<choose>
	    		<when test="nowPage!=totalPage">
	    	<![CDATA[
	    	where rownum<=${onePageRecord} order by m_name desc
	    	]]>
	    	</when>
	    	<when test="nowPage==totalPage">
	    	<![CDATA[
	    	where rownum<=${lastPageRecord} order by m_name desc
	    	]]>
	    	</when>
	    	</choose>
	</select>
	
	<select id="managerTotalRecord" resultType="int">
		select count(managerid) from
			(select m.managerid managerid, m.s_no s_no, s.sportname sportname, m.m_name m_name, m.email email, m.tel tel, m.address address, m.gender gender,
				m.active active, to_char(m.signupdate, 'YYYY-MM-DD') signupdate, m.m_account m_account from manager m
				join sport s on m.s_no=s.s_no and m.active=1 order by m_name)
	</select>
	
	<select id="managerRecent" resultType="com.gather.we.dto.RankGameDTO">
		select no, s_no, managerid, st_no, gametime, managerfee, g_status, manager
		from rank_game where managerid=#{managerid} and g_status=1 and manager=1 order by gametime desc
	</select>
	
	<select id="managerDetail" resultType="com.gather.we.dto.ManagerDTO">
		select m.managerid managerid, m.s_no s_no, s.sportname sportname, m.m_name m_name, m.email email, m.tel tel, m.address address, m.gender gender,
		m.active active, to_char(m.signupdate, 'YYYY-MM-DD') signupdate, m.m_account m_account from manager m
		join sport s on m.s_no=s.s_no and m.active=1 and m.managerid=#{managerid}
	</select>
</mapper>